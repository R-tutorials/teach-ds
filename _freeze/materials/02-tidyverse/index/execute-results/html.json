{
  "hash": "bb81dc9c11efe3367fe63c978c3f9478",
  "result": {
    "markdown": "---\ntitle: \"Teaching data science with the tidyverse\"\nsubtitle: \"rstudio::conf(2022) <br> Designing the data science classroom\"\nauthor: \"Mine Ã‡etinkaya-Rundel\"\nfooter: \"[ðŸ”— rstd.io/teach-ds-conf22](https://rstd.io/teach-ds-conf22) / Module 2\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs:\n    theme: ../slides.scss\n    multiplex: true\n    transition: fade\n    slide-number: true\n    incremental: false \n    chalkboard: true\nexecute:\n  freeze: auto\n  echo: true\nknitr:\n  opts_chunk: \n    R.options:\n      width: 200\n---\n\n\n# Introduction\n\n\n::: {.cell}\n\n:::\n\n\n## Setting the scene\n\n::: columns\n::: {.column width=\"50%\" style=\"text-align: center;\"}\n![](images/icons8-code-64.png)\n\n**Assumption 1:**\n\nTeach authentic tools\n:::\n\n::: {.column width=\"50%\" style=\"text-align: center;\"}\n![](images/icons8-code-R-64.png)\n\n**Assumption 2:**\n\nTeach R as the authentic tool\n:::\n:::\n\n## Takeaway\n\n<br><br>\n\n> The tidyverse provides an effective and efficient pathway for undergraduate students at all levels and majors to gain computational skills and thinking needed throughout the data science cycle.\n\n::: aside\nÃ‡etinkaya-Rundel, M., Hardin, J., Baumer, B. S., McNamara, A., Horton, N. J., & Rundel, C.\n(2021).\nAn educator's perspective of the tidyverse.\narXiv preprint arXiv:2108.03510.\n[arxiv.org/abs/2108.03510](https://arxiv.org/abs/2108.03510)\n:::\n\n# Principles of the tidyverse\n\n## Tidyverse\n\n::: columns\n::: {.column width=\"80%\"}\n-   Meta R package that loads eight core packages when invoked and also bundles numerous other packages upon installation\n-   Tidyverse packages share a design philosophy, common grammar, and data structures\n:::\n\n::: {.column width=\"20%\"}\n![](images/tidyverse.png){fig-align=\"center\"}\n:::\n:::\n\n![](images/data-science.png){fig-align=\"center\"}\n\n## Setup\n\n**Data:** Thousands of loans made through the Lending Club, a peer-to-peer lending platform available in the **openintro** package, with a few modifications.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(openintro)\n\nloans <- loans_full_schema |>\n  mutate(\n    homeownership = str_to_title(homeownership), \n    bankruptcy = if_else(public_record_bankrupt >= 1, \"Yes\", \"No\")\n  ) |>\n  filter(annual_income >= 10) |>\n  select(\n    loan_amount, homeownership, bankruptcy,\n    application_type, annual_income, interest_rate\n  )\n```\n:::\n\n\n## Start with a data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9,976 Ã— 6\n  loan_amount homeownership bankruptcy application_type annual_income interest_rate\n        <int> <chr>         <chr>      <fct>                    <dbl>         <dbl>\n1       28000 Mortgage      No         individual               90000         14.1 \n2        5000 Rent          Yes        individual               40000         12.6 \n3        2000 Rent          No         individual               40000         17.1 \n4       21600 Rent          No         individual               30000          6.72\n5       23000 Rent          No         joint                    35000         14.1 \n6        5000 Own           No         individual               34000          6.72\n# â€¦ with 9,970 more rows\n```\n:::\n:::\n\n\n## Tidy data\n\n1.  Each variable forms a column\n2.  Each observation forms a row\n3.  Each type of observational unit forms a table\n\n::: aside\nWickham, H.\n. (2014).\nTidy Data.\n*Journal of Statistical Software*, *59*(10), 1--23.\n[doi.org/10.18637/jss.v059.i10](https://doi.org/10.18637/jss.v059.i10).\n:::\n\n## Task: Calculate a summary statistic {.small}\n\n::: goal\nCalculate the mean loan amount.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9,976 Ã— 6\n  loan_amount homeownership bankruptcy application_type annual_income interest_rate\n        <int> <chr>         <chr>      <fct>                    <dbl>         <dbl>\n1       28000 Mortgage      No         individual               90000         14.1 \n2        5000 Rent          Yes        individual               40000         12.6 \n3        2000 Rent          No         individual               40000         17.1 \n4       21600 Rent          No         individual               30000          6.72\n5       23000 Rent          No         joint                    35000         14.1 \n6        5000 Own           No         individual               34000          6.72\n# â€¦ with 9,970 more rows\n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(loan_amount)\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-error}\n```\nError in mean(loan_amount): object 'loan_amount' not found\n```\n:::\n:::\n\n\n## Task: Calculate a summary statistic\n\n::: question\nHow would you calculate the mean loan amount?\n:::\n\n::: share\n{{< fa brands discord >}} Add your answer to Discord.\n:::\n\n## Accessing a variable\n\n**Approach 1:** With `attach()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattach(loans)\nmean(loan_amount)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16357.53\n```\n:::\n:::\n\n\n. . .\n\n<br>\n\n*Not recommended.* What if you had another data frame you're working with concurrently called `car_loans` that also had a variable called `loan_amount` in it?\n\n\n::: {.cell}\n\n:::\n\n\n## Accessing a variable\n\n**Approach 2:** Using `$`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(loans$loan_amount)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16357.53\n```\n:::\n:::\n\n\n. . .\n\n<br>\n\n**Approach 3:** Using `with()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwith(loans, mean(loan_amount))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16357.53\n```\n:::\n:::\n\n\n## Accessing a variable\n\n**Approach 4:** The tidyverse approach:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans |>\n  summarise(mean_loan_amount = mean(loan_amount))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 Ã— 1\n  mean_loan_amount\n             <dbl>\n1           16358.\n```\n:::\n:::\n\n\n. . .\n\n-   More verbose\n-   But also more expressive and extensible\n\n## The tidyverse approach\n\n::: incremental\n-   Tidyverse functions take a `data` argument that allows them to localize computations inside the specified data frame\n\n-   Does not muddy the concept of what is in the current environment: variables always accessed from within in a data frame without the use of an additional function (like `with()`) or quotation marks, never as a vector\n:::\n\n# Teaching with the tidyverse\n\n## Your turn: Grouped summary {.small}\n\n::: cloud\n{{< fa cloud >}} RStudio Cloud > \"Module 2 - Tidyverse\" > ex-2-1.qmd\n:::\n\n::: appex\nBased on the applicants' home ownership status, compute the number of applicants and the average loan amount.\nDisplay the results in descending order of number of applicants.\n:::\n\n::: share\n{{< fa user-group >}} Compare answers with your neighbor and choose an approach you would teach in an intro course. {{< fa brands discord >}} Then, type your chosen answer on Discord along with some narrative about how you would approach teaching it describing how you would teach it.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Homeownership </th>\n   <th style=\"text-align:right;\"> Number of applicants </th>\n   <th style=\"text-align:right;\"> Average loan amount </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Mortgage </td>\n   <td style=\"text-align:right;\"> 4,778 </td>\n   <td style=\"text-align:right;\"> $18,132 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Rent </td>\n   <td style=\"text-align:right;\"> 3,848 </td>\n   <td style=\"text-align:right;\"> $14,396 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Own </td>\n   <td style=\"text-align:right;\"> 1,350 </td>\n   <td style=\"text-align:right;\"> $15,665 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_62df00a0\" style=\"right:0;bottom:0;font-size:1.5em;\" data-warnwhen=\"0\">\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n## Break it down I\n\n::: columns\n::: {.column width=\"40%\"}\nBased on the applicants' home ownership status, computer the number of applicants and the average loan amount.\nDisplay the results in descending order of number of applicants.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nloans\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9,976 Ã— 6\n  loan_amount homeownership bankruptcy application_type annual_income interest_rate\n        <int> <chr>         <chr>      <fct>                    <dbl>         <dbl>\n1       28000 Mortgage      No         individual               90000         14.1 \n2        5000 Rent          Yes        individual               40000         12.6 \n3        2000 Rent          No         individual               40000         17.1 \n4       21600 Rent          No         individual               30000          6.72\n5       23000 Rent          No         joint                    35000         14.1 \n6        5000 Own           No         individual               34000          6.72\n# â€¦ with 9,970 more rows\n```\n:::\n:::\n\n:::\n:::\n\n## Break it down II\n\n::: columns\n::: {.column width=\"40%\"}\n[Based on the applicants' home ownership status]{style=\"font-weight:bold;background-color:#ccddeb;\"}, compute the number of applicants and the average loan amount.\nDisplay the results in descending order of number of applicants.\n:::\n\n::: {.column width=\"60%\"}\n::: {.fragment fragment-index=\"2\"}\n::: in-out\n**\\[input\\]** data frame\n:::\n:::\n\n::: {.fragment fragment-index=\"3\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nloans |>\n  group_by(homeownership)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9,976 Ã— 6\n# Groups:   homeownership [3]\n  loan_amount homeownership bankruptcy application_type annual_income interest_rate\n        <int> <chr>         <chr>      <fct>                    <dbl>         <dbl>\n1       28000 Mortgage      No         individual               90000         14.1 \n2        5000 Rent          Yes        individual               40000         12.6 \n3        2000 Rent          No         individual               40000         17.1 \n4       21600 Rent          No         individual               30000          6.72\n5       23000 Rent          No         joint                    35000         14.1 \n6        5000 Own           No         individual               34000          6.72\n# â€¦ with 9,970 more rows\n```\n:::\n:::\n\n:::\n\n::: {.fragment fragment-index=\"4\"}\n::: {.in-out style=\"text-align: right;\"}\ndata frame **\\[output\\]**\n:::\n:::\n:::\n:::\n\n## Break it down III\n\n::: columns\n::: {.column width=\"40%\"}\nBased on the applicants' home ownership status, [compute the number of applicants]{style=\"font-weight:bold;background-color:#ccddeb;\"} and the average loan amount.\nDisplay the results in descending order of number of applicants.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-5\"}\nloans |>\n  group_by(homeownership) |> \n  summarize(\n    n_applicants = n()\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 Ã— 2\n  homeownership n_applicants\n  <chr>                <int>\n1 Mortgage              4778\n2 Own                   1350\n3 Rent                  3848\n```\n:::\n:::\n\n:::\n:::\n\n## Break it down IV\n\n::: columns\n::: {.column width=\"40%\"}\nBased on the applicants' home ownership status, compute the number of applicants and [the average loan amount]{style=\"font-weight:bold;background-color:#ccddeb;\"}.\nDisplay the results in descending order of number of applicants.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nloans |>\n  group_by(homeownership) |> \n  summarize(\n    n_applicants = n(),\n    avg_loan_amount = mean(loan_amount)\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 Ã— 3\n  homeownership n_applicants avg_loan_amount\n  <chr>                <int>           <dbl>\n1 Mortgage              4778          18132.\n2 Own                   1350          15665.\n3 Rent                  3848          14396.\n```\n:::\n:::\n\n:::\n:::\n\n## Break it down V\n\n::: columns\n::: {.column width=\"40%\"}\nBased on the applicants' home ownership status, compute the average loan amount and the number of applicants.\n[Display the results in descending order of number of applicants.]{style=\"font-weight:bold;background-color:#ccddeb;\"}\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nloans |>\n  group_by(homeownership) |> \n  summarize(\n    n_applicants = n(),\n    avg_loan_amount = mean(loan_amount)\n    ) |>\n  arrange(desc(n_applicants))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 Ã— 3\n  homeownership n_applicants avg_loan_amount\n  <chr>                <int>           <dbl>\n1 Mortgage              4778          18132.\n2 Rent                  3848          14396.\n3 Own                   1350          15665.\n```\n:::\n:::\n\n:::\n:::\n\n## Putting it back together\n\n::: in-out\n**\\[input\\]** data frame\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans |>\n  group_by(homeownership) |> \n  summarize(\n    n_applicants = n(),\n    avg_loan_amount = mean(loan_amount)\n    ) |>\n  arrange(desc(n_applicants))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 Ã— 3\n  homeownership n_applicants avg_loan_amount\n  <chr>                <int>           <dbl>\n1 Mortgage              4778          18132.\n2 Rent                  3848          14396.\n3 Own                   1350          15665.\n```\n:::\n:::\n\n\n::: in-out\n**\\[output\\]** data frame\n:::\n\n## Grouped summary with `aggregate()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres1 <- aggregate(loan_amount ~ homeownership, \n                  data = loans, FUN = length)\nres1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  homeownership loan_amount\n1      Mortgage        4778\n2           Own        1350\n3          Rent        3848\n```\n:::\n\n```{.r .cell-code}\nnames(res1)[2] <- \"n_applicants\"\nres1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  homeownership n_applicants\n1      Mortgage         4778\n2           Own         1350\n3          Rent         3848\n```\n:::\n:::\n\n\n## Grouped summary with `aggregate()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres2 <- aggregate(loan_amount ~ homeownership, \n                  data = loans, FUN = mean)\nnames(res2)[2] <- \"avg_loan_amount\"\n\nres2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  homeownership avg_loan_amount\n1      Mortgage        18132.45\n2           Own        15665.44\n3          Rent        14396.44\n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres <- merge(res1, res2)\nres[order(res$n_applicants, decreasing = TRUE), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  homeownership n_applicants avg_loan_amount\n1      Mortgage         4778        18132.45\n3          Rent         3848        14396.44\n2           Own         1350        15665.44\n```\n:::\n:::\n\n\n## Grouped summary with `aggregate()`\n\n::: small\n\n::: {.cell}\n\n```{.r .cell-code}\nres1 <- aggregate(loan_amount ~ homeownership, data = loans, FUN = length)\nnames(res1)[2] <- \"n_applicants\"\nres2 <- aggregate(loan_amount ~ homeownership, data = loans, FUN = mean)\nnames(res2)[2] <- \"avg_loan_amount\"\nres <- merge(res1, res2)\nres[order(res$n_applicants, decreasing = TRUE), ]\n```\n:::\n\n:::\n\n. . .\n\n-   **Good:** Inputs and outputs are data frames\n-   **Not so good:** Need to introduce\n    -   formula syntax\n\n    -   passing functions as arguments\n\n    -   merging datasets\n\n    -   square bracket notation for accessing rows\n\n## Grouped summary with `tapply()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- tapply(loans$loan_amount, loans$homeownership, mean)\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMortgage      Own     Rent \n18132.45 15665.44 14396.44 \n```\n:::\n\n```{.r .cell-code}\ny <- tapply(loans$loan_amount, loans$homeownership, length)\ny\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMortgage      Own     Rent \n    4778     1350     3848 \n```\n:::\n:::\n\n\n## Grouped summary with `tapply()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nz <- data.frame(\n  avg_loan_amount = x,\n  n_applicants = y\n  )\nz\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         avg_loan_amount n_applicants\nMortgage        18132.45         4778\nOwn             15665.44         1350\nRent            14396.44         3848\n```\n:::\n\n```{.r .cell-code}\nz[order(z$n_applicants), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         avg_loan_amount n_applicants\nOwn             15665.44         1350\nRent            14396.44         3848\nMortgage        18132.45         4778\n```\n:::\n:::\n\n\n## Grouped summary with `tapply()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- tapply(loans$loan_amount, loans$homeownership, length)\ny <- tapply(loans$loan_amount, loans$homeownership, mean)\nz <- data.frame(n_applicants = x, avg_loan_amount = y)\nz[order(z$n_applicants), ]\n```\n:::\n\n\n. . .\n\n<br>\n\n**Not so good:**\n\n-   passing functions as arguments\n-   distinguishing between the various `apply()` functions\n-   ending up with a new data structure (`array`)\n-   relegating a data column to rownames\n\n## Your turn: Data visualization\n\n::: cloud\n{{< fa cloud >}} RStudio Cloud > \"Module 2 - Tidyverse\" > ex-2-2.qmd\n:::\n\n::: appex\nUsing the `loans` data, create side-by-side box plots that shows the relationship between loan amount and application type, faceted by homeownership.\n:::\n\n::: share\n{{< fa user-group >}} Compare answers with your neighbor and choose an approach you would teach in an intro course. {{< fa brands discord >}} Then, type your chosen answer and some narrative about how you would approach teaching it describing how you would teach it.\n:::\n\n::: {.callout-tip appearance=\"simple\"}\nSee next style for desired output.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_62defef5\" style=\"right:0;bottom:0;font-size:1.5em;\" data-warnwhen=\"0\">\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n## Desired output\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-28-1.png){fig-align='center' width=1152}\n:::\n:::\n\n\n## Break it down I\n\n::: columns\n::: {.column width=\"40%\"}\n[Using the `loans` data]{style=\"font-weight:bold;background-color:#ccddeb;\"}, create side-by-side box plots that shows the relationship between annual income and application type, faceted by homeownership.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\nggplot(loans)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-29-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## Break it down II\n\n::: columns\n::: {.column width=\"40%\"}\nUsing the `loans` data, create side-by-side box plots that shows the relationship between annual income and [application type]{style=\"font-weight:bold;background-color:#ccddeb;\"}, faceted by homeownership.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(loans, \n       aes(x = application_type))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-30-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## Break it down III\n\n::: columns\n::: {.column width=\"40%\"}\nUsing the `loans` data, create side-by-side box plots that shows the relationship between [annual income]{style=\"font-weight:bold;background-color:#ccddeb;\"} and application type, faceted by homeownership.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(loans, \n       aes(x = application_type,\n           y = loan_amount))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-31-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## Break it down IV\n\n::: columns\n::: {.column width=\"40%\"}\nUsing the `loans` data, create [side-by-side box plots]{style=\"font-weight:bold;background-color:#ccddeb;\"} that shows the relationship between annual income and application type, faceted by homeownership.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(loans, \n       aes(x = application_type,\n           y = loan_amount)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-32-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## Break it down IV\n\n::: columns\n::: {.column width=\"40%\"}\nUsing the `loans` data, create side-by-side box plots that shows the relationship between annual income and application type, [faceted by homeownership]{style=\"font-weight:bold;background-color:#ccddeb;\"}.\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(loans, \n       aes(x = application_type,\n           y = loan_amount)) +\n  geom_boxplot() +\n  facet_wrap(~ homeownership)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-33-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## Plotting with `ggplot()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, \n       aes(x = application_type, y = loan_amount)) +\n  geom_boxplot() +\n  facet_wrap(~ homeownership)\n```\n:::\n\n\n. . .\n\n-   Each layer produces a valid plot\n-   Faceting by a third variable takes only one new function\n\n## Plotting with `boxplot()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels <- sort(unique(loans$homeownership))\nlevels\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Mortgage\" \"Own\"      \"Rent\"    \n```\n:::\n\n```{.r .cell-code}\nloans1 <- loans[loans$homeownership == levels[1],]\nloans2 <- loans[loans$homeownership == levels[2],]\nloans3 <- loans[loans$homeownership == levels[3],]\n```\n:::\n\n\n## Plotting with `boxplot()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(1, 3))\n\nboxplot(loan_amount ~ application_type, \n        data = loans1, main = levels[1])\nboxplot(loan_amount ~ application_type, \n        data = loans2, main = levels[2])\nboxplot(loan_amount ~ application_type, \n        data = loans3, main = levels[3])\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-36-1.png){width=960}\n:::\n:::\n\n\n## Visualizing a different relationship\n\n::: goal\nVisualize the relationship between interest rate and annual income, conditioned on whether the applicant had a bankruptcy.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-37-1.png){fig-align='center' width=1152}\n:::\n:::\n\n\n## Plotting with `ggplot()`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|4|5|6\"}\nggplot(loans, \n       aes(y = interest_rate, x = annual_income, \n           color = bankruptcy)) +\n  geom_point(alpha = 0.1) + \n  geom_smooth(method = \"lm\", size = 2, se = FALSE) + \n  scale_x_log10()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-38-1.png){fig-align='center' width=1152}\n:::\n:::\n\n\n## Further customizing `ggplot()` {.small}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|6|7|8|9,10|11\"}\nggplot(loans, \n       aes(y = interest_rate, x = annual_income, \n           color = bankruptcy)) +\n  geom_point(alpha = 0.1) + \n  geom_smooth(method = \"lm\", size = 2, se = FALSE) + \n  scale_x_log10(labels = scales::label_dollar()) +\n  scale_y_continuous(labels = scales::label_percent(scale = 1)) +\n  scale_color_OkabeIto() +\n  labs(x = \"Annual Income\", y = \"Interest Rate\", \n       color = \"Previous\\nBankruptcy\") +\n  theme_minimal(base_size = 18)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-39-1.png){fig-align='center' width=1152}\n:::\n:::\n\n\n## Plotting with `plot()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# From the OkabeIto palette\ncols = c(No = \"#e6a003\", Yes = \"#57b4e9\")\n\nplot(\n  loans$annual_income,\n  loans$interest_rate,\n  pch = 16,\n  col = adjustcolor(cols[loans$bankruptcy], alpha.f = 0.1),\n  log = \"x\",\n  xlab = \"Annual Income ($)\",\n  ylab = \"Interest Rate (%)\",\n  xaxp = c(1000, 10000000, 1)\n)\n\nlm_b_no = lm(\n  interest_rate ~ log10(annual_income), \n  data = loans[loans$bankruptcy == \"No\",]\n)\nlm_b_yes = lm(\n  interest_rate ~ log10(annual_income), \n  data = loans[loans$bankruptcy == \"Yes\",]\n)\n\nabline(lm_b_no, col = cols[\"No\"], lwd = 3)\nabline(lm_b_yes, col = cols[\"Yes\"], lwd = 3)\n\nlegend(\n  \"topright\", \n  legend = c(\"Yes\", \"No\"), \n  title = \"Previous\\nBankruptcy\", \n  col = cols[c(\"Yes\", \"No\")], \n  pch = 16, lwd = 1\n)\n```\n:::\n\n\n## Plotting with `plot()`\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-41-1.png){width=960}\n:::\n:::\n\n\n## Beyond wrangling, summaries, visualizations\n\nModeling and inference with **tidymodels**:\n\n-   A unified interface to modeling functions available in a large variety of packages\n\n-   Sticking to the data frame in / data frame out paradigm\n\n-   Guardrails for methodology\n\n::: {.callout-tip appearance=\"simple\"}\nNext module is teaching with tidymodels!\n:::\n\n# Pedagogical strengths of the tidyverse\n\n## Consistency\n\n-   No matter which approach or tool you use, you should strive to be consistent in the classroom whenever possible\n\n-   Tidyverse offers consistency, something we believe to be of the utmost importance, allowing students to move knowledge about function arguments to their long-term memory\n\n## Teaching consistently\n\n-   Challenge: Google and Stack Overflow can be less useful -- demo problem solving\n\n-   Counter-proposition: teach *all* (or multiple) syntaxes at once -- trying to teach two (or more!) syntaxes at once will slow the pace of the course, introduce unnecessary syntactic confusion, and make it harder for students to complete their work.\n\n-   \"Disciplined in what we teach, liberal in what we accept\"\n\n::: aside\nPostel, J.\n(1980).\nDoD standard internet protocol.\nACM SIGCOMM Computer Communication Review, 10(4), 12-51.\n[datatracker.ietf.org/doc/html/rfc760](https://datatracker.ietf.org/doc/html/rfc760)\n:::\n\n## Mixability\n\n-   Mix with base R code or code from other packages\n\n-   In fact, you can't not mix with base R code!\n\n## Scalability\n\nAdding a new variable to a visualization or a new summary statistic doesn't require introducing a numerous functions, interfaces, and data structures\n\n## User-centered design\n\n-   Interfaces designed with user experience (and learning) in mind\n\n-   Continuous feedback collection and iterative improvements based on user experiences improve functions' and packages' usability (and learnability)\n\n## Readability\n\nInterfaces that are designed to produce readable code\n\n## Community\n\n-   The encouraging and inclusive tidyverse community is one of the benefits of the paradigm\n\n-   Each package comes with a website, each of these websites are similarly laid out, and results of example code are displayed, and extensive vignettes describe how to use various functions from the package together\n\n## Shared syntax\n\nGet SQL for free with **dplyr** verbs!\n\n# Final thoughts\n\n## Building a curriculum\n\n-   Start with `library(tidyverse)`\n\n-   Teach by learning goals, not packages\n\n## Keeping up with the tidyverse\n\n-   Blog posts highlight updates, along with the reasoning behind them and worked examples\n\n-   [Lifecycle stages](https://lifecycle.r-lib.org/articles/stages.html) and badges\n\n    ![](images/lifecycle.png)\n\n## Coda {.smaller}\n\n::: columns\n::: {.column width=\"60%\"}\n> We are all converts to the tidyverse and have made a conscious choice to use it in our research and our teaching.\n> We each learned R without the tidyverse and have all spent quite a few years teaching without it at a variety of levels from undergraduate introductory statistics courses to graduate statistical computing courses.\n> This paper is a synthesis of the reasons supporting our tidyverse choice, along with benefits and challenges associated with teaching statistics with the tidyverse.\n:::\n\n::: {.column width=\"40%\"}\n![](images/paper-tise.png){fig-alt=\"Screenshot of the title and authors page of the paper linked below.\"}\n:::\n:::\n\n::: aside\nÃ‡etinkaya-Rundel, M., Hardin, J., Baumer, B. S., McNamara, A., Horton, N. J., & Rundel, C.\n(2021).\nAn educator's perspective of the tidyverse.\narXiv preprint arXiv:2108.03510.\n[arxiv.org/abs/2108.03510](https://arxiv.org/abs/2108.03510)\n:::\n\n## Discussion\n\n::: question\nDo you teach with the tidyverse?\n\n-   If yes, what are some highlights of your teaching experience and what are some challenges?\n-   If no, what is your approach and, if you've considered the tidyverse but decided against it, why?\n\nAny other discussion points of interest?\n:::\n\n::: share\n{{< fa user-group >}} Discuss with your partner for a few minutes first, before sharing with the big group.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_62defdf7\" style=\"right:0;bottom:0;font-size:1.5em;\" data-warnwhen=\"0\">\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">04</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n## Time permitting\n\nLet's take a look at the source code for these slides for some of the highlighting tricks!\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.3.5/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.3.5/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}