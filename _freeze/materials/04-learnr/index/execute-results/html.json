{
  "hash": "72430c35f44c5af9d0cf695f1c12c570",
  "result": {
    "markdown": "---\ntitle: \"Interactivity and immediate feedback with learnr\"\nsubtitle: \"rstudio::conf(2022) <br> Designing the data science classroom\"\nauthor: \"Maria Tackett\"\nfooter: \"[üîó rstd.io/teach-ds-conf22](https://rstd.io/teach-ds-conf22)\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs:\n    theme: ../slides.scss\n    multiplex: true\n    transition: fade\n    slide-number: true\n    incremental: false \n    chalkboard: true\nexecute:\n  freeze: auto\n  echo: true\nknitr:\n  opts_chunk: \n    R.options:\n      width: 200\n---\n\n\n# What?\n\n\n\n\n\n## Parts of a tutorial\n\n![*Link to tutorial: [minecr.shinyapps.io/dsbox-01-edibnb](https://minecr.shinyapps.io/dsbox-01-edibnb/)*](images/learnr-example.png)\n\n# Why?\n\n## Within a course\n\n-   In a flipped classroom\n    -   Assign a learnr tutorial that students can practice with before introducing a concept in class\n    -   Cover the concept in class (quicker)\n    -   Allocate the time saved to hands on exercises in class\n-   As lecture follow-up\n    -   Provide the same content from the lecture as follow-up exercises\n-   Provide immediate and meaningful feedback at scale\n\n## Self learning\n\n-   Learn by doing\n-   Tutorials in R packages\n-   Workshop follow-ups\n\n# How?\n\n## Topics\n\n-   Question types\n\n-   **gradethis** for automated feedback\n\n-   Recording student responses using minute papers and **learnrhash**\n\n-   Sharing tutorials with students\n\n## Getting started: Qmd ‚û°Ô∏è Rmd\n\n-   Learnr tutorials are written in an R Markdown document (`.Rmd`)\n\n-   The syntax and structure is very similar to a Quarto document (`.qmd`)\n\n-   These documents primarily differ in some arguments in the YAML\n\n## YAML for learnr tutorial\n\n``` yaml\n---\ntitle: \"Learnr Demo\"\noutput: \n  learnr::tutorial:\n    progressive: true\n    allow_skip: true\n    css: \"css/style.css\" \nruntime: shiny_prerendered\n---\n```\n\n-   `runtime: shiny_prerendered`: Turns R Markdown into interactive app\n-   `progressive: true`: Display one subsection at a time\n-   `allow_skip: true`: Able to skip exercises in a section\n-   `css: \"css/style.css\"`: Apply custom formatting\n\n# Demo\n\n## Follow along\n\nFollow along options:\n\n-   Local:\n\n    -   In RStudio, install and load the **learnr, gradethis*,*** s**ortable**, and **learnrhash** packages\n    -   Access the source file for the tutorial on GitHub: <https://github.com/rstudio-conf-2022/teach-ds-learnr>\n\n-   Cloud: Go to the workspace for this course and start the assignment called **04 - Learnr**.\n\n-   Deployed tutorial: <https://minecr.shinyapps.io/learnr-demo>\n\n## Writing questions\n\n-   **Question types**\n    -   Multiple choice\n    -   Coding exercises\n    -   Sorting questions\n-   **Automated feedback**\n\n## Your turn: Writing exercises {.small}\n\n::: cloud\n{{< fa cloud >}} RStudio Cloud > \"Module 4 - Learnr\" > learnr-demo.Rmd > Part 2: Your turn!\n:::\n\n::: appex\nAdd three questions to the tutorial:\n\n-   one multiple choice\n-   one coding exercise\n-   one sortable question\n\n**Stretch goal**: Add hints to the coding exercise.\n\nYou can write your questions in Part 2: Your turn! section of `learnr-demo.Rmd`.\n:::\n\n::: share\n{{< fa user-group >}} Compare your answer with your neighbor. {{< fa brands discord >}} Then type the code for one of your exercises.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_62e02e9c\" style=\"right:0;bottom:0;font-size:1.5em;\" data-warnwhen=\"0\">\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n## gradethis\n\nThe [gradethis](https://pkgs.rstudio.com/gradethis/) package makes it feasible to check coding exercises in a learnr tutorial. There are two basic methods for checking:\n\n-   `grade_this_code()`: Compare student code to model code (strict check)\n\n-   `grade_this()`: Compare student result to model result (flexible check)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::install_github(\"rstudio/gradethis\")\n```\n:::\n\n\n## Your turn: Writing automated feedback {.small}\n\n::: cloud\n{{< fa cloud >}} RStudio Cloud > \"Module 4 - Learnr\" > learnr-demo.Rmd > Part 4: Your turn!\n:::\n\n::: appex\nAdd automated feedback to your coding exercise.\n\n**Stretch goal**: Consider 2 -3 common errors students may make. Write specific feedback for those errors.\n\nYou can write your responses in Part 4: Your turn! section or modify the code in Part 2 of `learnr-demo.Rmd`.\n:::\n\n::: share\n{{< fa user-group >}} Compare your answer with your neighbor. {{< fa brands discord >}} Then type the code for one of your exericses.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_62e02d98\" style=\"right:0;bottom:0;font-size:1.5em;\" data-warnwhen=\"0\">\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n# Recording student responses\n\n## \"Minute paper\"\n\nAdd a link to a form at the end of the tutorial for a \"minute paper\"\n\n> -   *Write about one or two questions you didn't get right initially but were able to solve after a few tries. What was difficult about them? What did you ultimately learn?*\n>\n>     OR\n>\n> -   *If you got every single question correct on the first try, write one question you would still like clarified on the topics covered in this quiz.*\n\n## learnrhash\n\n-   Use the [**learnrhash**](https://github.com/rundel/learnrhash) package to collect student responses from learnr tutorials.\n\n-   Students submit responses using a \"hash\" submitted in an online form.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nremotes::install_github(\"rundel/learnrhash\")\n```\n:::\n\n\n## Sharing with students\n\n-   Deploy on\n\n    -   [shinyapps.io](https://www.shinyapps.io/)\n    -   RStudio Connect (free for academic use)\n\n-   Distribute tutorials as a package\n\n    -   Example: [dsbox R package](https://github.com/rstudio-education/dsbox) includes a set of learnr tutorials\n\n    -   More about developing packages in a later session\n\n## Learn more!\n\n**Creating learnr tutorials**\n\n-   [Teaching with learnr: a powerful tool for remote teaching](https://education.rstudio.com/blog/2020/05/learnr-for-remote/) by Allison Horst\n-   [Building interactive tutorials in R](https://mine-cetinkaya-rundel.github.io/teach-r-online/) by Mine √áetinkaya-Rundel\n-   [Feedback at scale](https://github.com/rstudio/rstudio-conf/tree/master/2021/minecetinkayarundel) by Mine √áetinkaya-Rundel\n    -   [Click here](https://www.rstudio.com/resources/rstudioglobal-2021/feedback-at-scale/) for video\n\n## Learn more!\n\n**Sharing tutorials**\n\n-   [Publishing learnr tutorials on shinyapps.io](https://cran.r-project.org/web/packages/learnr/vignettes/shinyapps-publishing.html) by Angela Li\n-   [How to deliver learnr tutorials in a package](https://education.rstudio.com/blog/2020/09/delivering-learnr-tutorials-in-a-package/) by Desir√©e De Leon\n\n# Workshop check in\n\n::: question\nWe have completed Day 01! Please answer the following using your sticky notes:\n\n-   Purple sticky note: What is going well / what has been your favorite part of the workshop so far?\n\n-   Orange sticky note: What is still unclear or confusing?\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.3.5/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.3.5/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}