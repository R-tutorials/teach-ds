---
title: "Interactivity and immediate feedback with learnr"
subtitle: "rstudio::conf(2022) <br> Designing the data science classroom"
author: "Maria Tackett"
footer: "[ðŸ”— rstd.io/teach-ds-conf22](https://rstd.io/teach-ds-conf22)"
logo: "../images/logo.png"
format: 
  revealjs:
    theme: ../slides.scss
    multiplex: true
    transition: fade
    slide-number: true
    incremental: false 
    chalkboard: true
    center: true
execute:
  freeze: auto
---

# In progress

::: callout-warning
These slides are currently being designed and built.
:::

# What?

------------------------------------------------------------------------

## Parts of a tutorial 

![*Source: [minecr.shinyapps.io/dsbox-01-edibnb](https://minecr.shinyapps.io/dsbox-01-edibnb/)*](images/learnr-example.png)

# Why?

## Within a course

-   In a flipped classroom
    -   Assign a learnr tutorial that students can practice with before introducing a concept in class
    -   Cover the concept in class (quicker)
    -   Allocate the time saved to hands on exercises in class
-   Lecture follow-up
    -   Provide the same content from the lecture as follow up exercises
-   Provide immediate and meaningful feedback at scale

## Self learning

-   Learn by doing
-   Package tutorials
-   Workshop follow ups

# How?

------------------------------------------------------------------------

## Topics

-   Question types

-   **gradethis** for automated feedback

-   Writing effective questions

-   Sharing with students

-   Recording student responses - include this (?)

------------------------------------------------------------------------

## Getting started: .qmd `r emo::ji("right_arrow")` .rmd

-   Learnr tutorials are written in an R Markdown document (`.rmd`)

-   The syntax and structure is very similar to a Quarto document (`.qmd`)

-   These documents primarily differ in some of the arguments in the YAML

## YAML for learnr tutorial

```{r}
#| eval: false
#| echo: true
---
title: "Learnr Demo"
output: 
  learnr::tutorial:
    progressive: true
    allow_skip: true
    css: "css/style.css" 
runtime: shiny_prerendered
---
```

-   `runtime: shiny_prerendered`: Turns R Markdown into interactive app
-   `progressive: true`: Display one subsection at a time
-   `allow_skip: true`: Able to skip exercises in a section
-   `css: "css/style.css"`: Apply custom formatting

# Demo

## Follow along

Follow along options:

-   Local:

    -   In RStudio, install and load the **learnr, gradethis*,*** and **sortable** packages
    -   Access the source file for the tutorial on GitHub: [github.com/matackett/learnr-demo](https://github.com/matackett/learnr-demo)

-   Cloud: Go to the workspace for this course and start the assignment called **04 - Learnr**.

-   Deployed tutorial: <https://matackett.shinyapps.io/learnr-demo>

## Writing questions

-   **Question types**
    -   Multiple choice
    -   Coding exercises
    -   Sorting questions
-   **Writing effective questions**

## Grading coding exercises

The [gradethis](https://pkgs.rstudio.com/gradethis/) package makes it feasible to check coding exercises in a learnr tutorial. There are two basic methods for checking:

-   `grade_this_code()`: Compare student code to model code (strict check)

-   `grade_this()`: Compare student result to model result (flexible check)

## Your turn!

::: callout-important
Create a tutorial with three questions:

-   one multiple choice

-   one coding exercise

-   one sortable question

You can write your responses in **Part 5: Your Turn!** in the learnr demo. It is OK if each question requires code, but that is not required.

**Stretch goal:** Add hints and solution checking to the coding exercise.
:::

## Sharing with students

-   Deploy on

    -   [shinapps.io](https://www.shinyapps.io/)
    -   RStudio Connect (free for academic use)

-   Distribute tutorials as a package

    -   [dsbox R package](https://github.com/rstudio-education/dsbox) includes set of learnr tutorials

    -   We will talk about developing packages in a later session

# Recording student responses

## "Minute paper"

Add a link to a form at the end of the tutorial for a "minute paper"

::: callout-important
-   *Write about one or two questions you didn't get right initially but were able to solve after a few tries. What was difficult about them? What did you ultimately learn?*

OR

-   *If you got every single question correct on the first try, write one question you would still like clarified on the topics covered in this quiz.*
:::

------------------------------------------------------------------------

## Collect response via learnrhash 

-   Is there time to include this?

## Learn more!

-   Add some resources

# Workshop check in 

---

::: callout-important
We have completed Day 01! Please answer the following using your sticky notes:

-   XX sticky note: What is going well / what has been your favorite part of the workshop so far?

-   XX sticky note: What is still unclear or confusing?
:::
